<?php
/**
 * @file
 * Code for the Calendar feature feature.
 */

include_once 'calendar_feature.features.inc';

/**
 * Implements hook_rules_event_info().
 */
function calendar_feature_rules_event_info() {
  $items = array(
    'calendar_feature_remind_organizer' => array(
      'label' => t('Organizer event tomorrow'),
      'group' => t('Calendar feature'),
      'variables' => array(
        'user' => array(
            'type' => 'user',
            'label' => t('Organizer'),
        ),
        'node' => array(
            'type' => 'node',
            'label' => t('Event'),
        ),
      ),
    ),
    'calendar_feature_remind_attendee' => array(
      'label' => t('Attendee event tomorrow'),
      'group' => t('Calendar feature'),
      'variables' => array(
        'user' => array(
            'type' => 'user',
            'label' => t('Attendee'),
        ),
        'node' => array(
            'type' => 'node',
            'label' => t('Event'),
        ),
        'comment' => array(
            'type' => 'comment',
            'label' => t('Comment'),
        ),
      ),
    ),
  );
  return $items;
}

/**
 * Implements hook_cron().
 */
function calendar_feature_cron() {
  _calendar_feature_cron_calendar_feature();
}

/**
 * Cron worker.
 */
function _calendar_feature_cron_calendar_feature() {
  $last_run = variable_get('calendar_feature_cron', 0);
  $yesterday = strtotime('-1 day');
  if ($last_run < $yesterday) {
    $today = date('m/d/Y');
    $today = strtotime($today . ' 00:00:01');
    variable_set('calendar_feature_cron', $today);
    // Check for reminders.
    calendar_feature_send_reminders();
  }
}

/**
 * Check for events in the next 24 hours and send reminders.
 */
function calendar_feature_send_reminders() {
drupal_set_message('calendar_feature_send_reminders');
  if (!function_exists('rules_invoke_event')) {
    return; // Bail if we don't have rules.
  }
  // Check for events.
  $events = db_query('SELECT w.entity_id from {field_data_field_when} w ' .
    'LEFT JOIN {node} n ON w.entity_id = n.nid ' .
    'WHERE n.status = 1 ' .
    'AND w.field_when_value BETWEEN :now AND :tomorrow',
    array(':now' => date('Y-m-d 00:00:00', strtotime('+1 day')), ':tomorrow' => date('Y-m-d 00:00:00', strtotime('+2 day'))));
  foreach ($events as $event) {
    $node = node_load($event->entity_id);
drupal_set_message('found event:' . $node->title);
    $organizer = user_load($node->uid);
    rules_invoke_event('calendar_feature_remind_organizer', $organizer, $node);
    // And check for attendees.
    $comments = db_query('SELECT c.cid from {comment} c ' .
      'WHERE c.status = 1 ' .
      'AND c.nid = :nid',
      array(':nid', $event->entity_id)
    );
    $found_comments = array();
    foreach ($comments as $comment) {
      $comment = comment_load($comment->cid);
      $found_comments[$comment->uid] = $comment; // Only grab the latest notice from the user.
    }
    // Send reminders.
    foreach ($found_comments as $comment) {
      $attendee = user_load($comment->uid);
drupal_set_message('found attendee:' . $attendee->user);
      rules_invoke_event('calendar_feature_remind_attendee', $attendee, $node, $comment);
    }
  }
}
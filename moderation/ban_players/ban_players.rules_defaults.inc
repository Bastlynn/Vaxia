<?php
/**
 * @file
 * ban_players.rules_defaults.inc
 */

/**
 * Implements hook_default_rules_configuration().
 */
function ban_players_default_rules_configuration() {
  $items = array();
  $items['rules_add_ip_for_banned_user'] = entity_import('rules_config', '{ "rules_add_ip_for_banned_user" : {
      "LABEL" : "Add IP for banned user",
      "PLUGIN" : "reaction rule",
      "OWNER" : "rules",
      "TAGS" : [ "Bans" ],
      "REQUIRES" : [ "rules", "php" ],
      "ON" : { "user_login" : [] },
      "IF" : [
        { "user_has_role" : {
            "account" : [ "site:current-user" ],
            "roles" : { "value" : { "31" : "31" } }
          }
        }
      ],
      "DO" : [
        { "list_add" : {
            "list" : [ "site:current-user:field-banned-ip" ],
            "item" : { "select" : "site:name", "php" : { "code" : "return ip_address();" } },
            "unique" : 1
          }
        },
        { "block_ip" : { "ip_address" : [ "" ] } },
        { "redirect" : { "url" : "user\\/logout" } }
      ]
    }
  }');
  $items['rules_alert_user_for_banned_ip'] = entity_import('rules_config', '{ "rules_alert_user_for_banned_ip" : {
      "LABEL" : "Alert leads, user shares banned IP",
      "PLUGIN" : "reaction rule",
      "OWNER" : "rules",
      "TAGS" : [ "Bans" ],
      "REQUIRES" : [ "rules", "views_rules", "php" ],
      "ON" : { "user_login" : [] },
      "IF" : [
        { "NOT user_has_role" : {
            "account" : [ "site:current-user" ],
            "roles" : { "value" : { "31" : "31" } }
          }
        }
      ],
      "DO" : [
        { "variable_add" : {
            "USING" : { "type" : "text" },
            "PROVIDE" : { "variable_added" : { "matching_user_list" : "Matching user list" } }
          }
        },
        { "VIEW LOOP" : {
            "VIEW" : "ban_player",
            "DISPLAY" : "banned_users",
            "USING" : { "field_banned_ip_value" : "\\u003C?php \\r\\necho ip_address();\\r\\n?\\u003E" },
            "ROW VARIABLES" : {
              "uid" : { "uid" : "Uid" },
              "name" : { "name" : "Name" },
              "field_banned_ip" : { "field_banned_ip" : "Banned IP" },
              "field_banned_until" : { "field_banned_until" : "Banned until" },
              "field_reason_for_ban" : { "field_reason_for_ban" : "Reason for ban" }
            },
            "DO" : [
              { "entity_fetch" : {
                  "USING" : { "type" : "user", "id" : [ "uid" ] },
                  "PROVIDE" : { "entity_fetched" : { "matching_user" : "Matching user" } }
                }
              },
              { "data_set" : {
                  "data" : [ "matching-user-list" ],
                  "value" : "[matching-user-list:value]\\r\\n[matching-user:name] ( [matching-user:mail] )"
                }
              },
              { "mail_to_users_of_role" : {
                  "roles" : { "value" : { "3" : "3", "21" : "21" } },
                  "subject" : "[Vaxia] User detected sharing IP with banned user(s)",
                  "message" : "A user was detected on login who shares an IP with a banned user.\\r\\n\\r\\nThe user: [site:current-user:name]\\r\\n\\r\\nThe banned user(s):\\r\\n\\r\\n[matching-user-list:value]\\r\\n\\r\\nThis does not indicate that the user detected is a sockpuppet of the banned user. But it does mean someone should take a closer look at the user and the banned user to check.\\r\\n\\r\\n~~~~~~\\r\\nThis email was automatically generated by vaxia.org.\\r\\nYou are receiving this email as part of your membership at vaxia.org.\\r\\nDo not reply this this email, it is not a monitored account and messages will not be received by a human.\\r\\n~~~~~~"
                }
              }
            ]
          }
        }
      ]
    }
  }');
  $items['rules_permanently_ban_user'] = entity_import('rules_config', '{ "rules_permanently_ban_user" : {
      "LABEL" : "Permanently ban user",
      "PLUGIN" : "reaction rule",
      "OWNER" : "rules",
      "TAGS" : [ "Bans" ],
      "REQUIRES" : [ "rules", "views_rules", "workflow_rules" ],
      "ON" : { "user_logout" : [] },
      "IF" : [
        { "user_has_role" : { "account" : [ "account" ], "roles" : { "value" : { "31" : "31" } } } }
      ],
      "DO" : [
        { "VIEW LOOP" : {
            "VIEW" : "vaxia_character_sheets",
            "DISPLAY" : "rules_chars_by_user",
            "USING" : { "uid" : [ "account:uid" ] },
            "ROW VARIABLES" : { "nid" : { "char_nid" : "Character nid" } },
            "DO" : [
              { "entity_fetch" : {
                  "USING" : { "type" : "node", "id" : [ "char-nid" ] },
                  "PROVIDE" : { "entity_fetched" : { "character" : "Character" } }
                }
              },
              { "workflow_rules_set_state" : {
                  "node" : [ "character" ],
                  "workflow_state" : { "value" : { "24" : "24" } },
                  "workflow_comment" : "Removed as part of permaban."
                }
              },
              { "entity_query" : {
                  "USING" : {
                    "type" : "node",
                    "property" : "field_character_owner",
                    "value" : [ "character" ],
                    "limit" : "1000"
                  },
                  "PROVIDE" : { "entity_fetched" : { "char_items" : "Char items" } }
                }
              },
              { "VIEW LOOP" : {
                  "VIEW" : "character_items",
                  "DISPLAY" : "char_items",
                  "USING" : { "field_character_owner_nid" : [ "char-nid" ] },
                  "ROW VARIABLES" : { "nid" : { "item_nid" : "Item nid" } },
                  "DO" : [
                    { "entity_fetch" : {
                        "USING" : { "type" : "node", "id" : [ "item-nid" ] },
                        "PROVIDE" : { "entity_fetched" : { "item" : "Item" } }
                      }
                    },
                    { "workflow_rules_set_state" : {
                        "node" : [ "item" ],
                        "workflow_state" : { "value" : { "22" : "22" } },
                        "workflow_comment" : "Removed as part of permaban."
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        { "VIEW LOOP" : {
            "VIEW" : "artwork",
            "DISPLAY" : "views_rules_1",
            "ROW VARIABLES" : { "nid" : { "art_nid" : "Art nid" } },
            "DO" : [
              { "entity_fetch" : {
                  "USING" : { "type" : "node", "id" : [ "art-nid" ] },
                  "PROVIDE" : { "entity_fetched" : { "art" : "Art" } }
                }
              },
              { "workflow_rules_set_state" : {
                  "node" : [ "art" ],
                  "workflow_state" : { "value" : { "17" : "17" } },
                  "workflow_comment" : "Removed as part of permaban."
                }
              }
            ]
          }
        }
      ]
    }
  }');
  $items['rules_set_player_last_ip'] = entity_import('rules_config', '{ "rules_set_player_last_ip" : {
      "LABEL" : "Set player last IP",
      "PLUGIN" : "reaction rule",
      "OWNER" : "rules",
      "TAGS" : [ "Players" ],
      "REQUIRES" : [ "rules", "php", "user_stats" ],
      "ON" : { "user_stats_ip_address_insert" : [] },
      "IF" : [
        { "user_has_role" : {
            "account" : [ "user" ],
            "roles" : { "value" : { "30" : "30", "8" : "8" } },
            "operation" : "OR"
          }
        }
      ],
      "DO" : [
        { "variable_add" : {
            "USING" : { "type" : "text", "value" : "\\u003C?php echo $statistic_value; ?\\u003E" },
            "PROVIDE" : { "variable_added" : { "new_ip" : "New IP" } }
          }
        },
        { "data_set" : { "data" : [ "user:field-last-ip" ], "value" : [ "new-ip" ] } },
        { "data_set" : {
            "data" : [ "user:field-latitude" ],
            "value" : "\\u003C?php\\r\\n$loc_data = smart_ip_get_location([statistic-value:value]);\\r\\necho !empty($loc_data[\\u0027latitude\\u0027]) ? $loc_data[\\u0027latitude\\u0027] : 0; \\r\\n?\\u003E"
          }
        },
        { "data_set" : {
            "data" : [ "user:field-longitude" ],
            "value" : "\\u003C?php\\r\\n$loc_data = smart_ip_get_location([statistic-value:value]);\\r\\necho !empty($loc_data[\\u0027longitude\\u0027]) ? $loc_data[\\u0027longitude\\u0027] : 0; \\r\\n?\\u003E"
          }
        }
      ]
    }
  }');
  $items['rules_set_player_last_ip_on_login_access'] = entity_import('rules_config', '{ "rules_set_player_last_ip_on_login_access" : {
      "LABEL" : "Set player last IP - on login\\/access",
      "PLUGIN" : "reaction rule",
      "OWNER" : "rules",
      "TAGS" : [ "Players" ],
      "REQUIRES" : [ "rules", "php" ],
      "ON" : { "user_login" : [] },
      "IF" : [
        { "user_has_role" : {
            "account" : [ "account" ],
            "roles" : { "value" : { "30" : "30", "8" : "8" } },
            "operation" : "OR"
          }
        }
      ],
      "DO" : [
        { "data_set" : {
            "data" : [ "account:field-last-ip" ],
            "value" : "\\u003C?php\\r\\necho ip_address();\\r\\n?\\u003E"
          }
        },
        { "data_set" : {
            "data" : [ "account:field-latitude" ],
            "value" : "\\u003C?php\\r\\n$loc_data = smart_ip_get_location( ip_address() );\\r\\necho !empty($loc_data[\\u0027latitude\\u0027]) ? $loc_data[\\u0027latitude\\u0027] : 0; \\r\\n?\\u003E"
          }
        },
        { "data_set" : {
            "data" : [ "account:field-longitude" ],
            "value" : "\\u003C?php\\r\\n$loc_data = smart_ip_get_location( ip_address() );\\r\\necho !empty($loc_data[\\u0027longitude\\u0027]) ? $loc_data[\\u0027longitude\\u0027] : 0; \\r\\n?\\u003E"
          }
        }
      ]
    }
  }');
  return $items;
}

<?php
/**
 * @file
 * storyhosts.rules_defaults.inc
 */

/**
 * Implements hook_default_rules_configuration().
 */
function storyhosts_default_rules_configuration() {
  $items = array();
  $items['rules_make_user_eligible_for_sh_on_xp_gain'] = entity_import('rules_config', '{ "rules_make_user_eligible_for_sh_on_xp_gain" : {
      "LABEL" : "Make user eligible for SH on XP gain",
      "PLUGIN" : "reaction rule",
      "OWNER" : "rules",
      "TAGS" : [ "Storyhosts" ],
      "REQUIRES" : [ "rules" ],
      "ON" : { "user_update" : [] },
      "IF" : [
        { "NOT user_is_blocked" : { "account" : [ "account" ] } },
        { "user_has_role" : { "account" : [ "account" ], "roles" : { "value" : { "8" : "8" } } } },
        { "NOT user_has_role" : { "account" : [ "account" ], "roles" : { "value" : { "12" : "12" } } } },
        { "data_is" : {
            "data" : [ "account:field-xp-over-time" ],
            "op" : "\\u003E",
            "value" : "39"
          }
        }
      ],
      "DO" : [
        { "user_add_role" : { "account" : [ "account" ], "roles" : { "value" : { "12" : "12" } } } },
        { "mail" : {
            "to" : "[account:mail]",
            "subject" : "[Vaxia] You are eligible to become a Storyhost",
            "message" : "Hi,\\r\\n\\r\\nYou have been with us for 40 XP worth of posting and RP. We wanted to let you know that you qualify now for the Storyhost course if you\\u0027re interested in joining the A\\/SH group. We can always use more Storyhosts, so please check out the following link if you are interested:\\r\\n\\r\\nhttp:\\/\\/vaxia.org\\/wiki\\/sh-course\\r\\n\\r\\nThank you for being a valuable member of our community - we\\u0027re glad to have you.\\r\\n\\r\\n~~~~~~\\r\\nThis email was automatically generated by vaxia.org.\\r\\nYou are receiving this email as part of your membership at vaxia.org.\\r\\nDo not reply this this email, it is not a monitored account and messages will not be received by a human.\\r\\n~~~~~~",
            "language" : [ "" ]
          }
        }
      ]
    }
  }');
  $items['rules_remove_starvation_role_from_sh'] = entity_import('rules_config', '{ "rules_remove_starvation_role_from_sh" : {
      "LABEL" : "Remove starvation role from SH",
      "PLUGIN" : "reaction rule",
      "OWNER" : "rules",
      "TAGS" : [ "Starvation mode" ],
      "REQUIRES" : [ "rules", "user_stats" ],
      "ON" : { "user_stats_day_older" : [] },
      "IF" : [
        { "user_has_role" : {
            "account" : [ "user" ],
            "roles" : { "value" : { "25" : "25", "9" : "9" } }
          }
        }
      ],
      "DO" : [
        { "user_remove_role" : { "account" : [ "user" ], "roles" : { "value" : { "25" : "25" } } } }
      ]
    }
  }');
  $items['rules_set_sh_character_on_user'] = entity_import('rules_config', '{ "rules_set_sh_character_on_user" : {
      "LABEL" : "Set SH character on User",
      "PLUGIN" : "reaction rule",
      "OWNER" : "rules",
      "TAGS" : [ "Storyhosts" ],
      "REQUIRES" : [ "rules", "workflow_rules" ],
      "ON" : { "node_insert--character_sheet" : { "bundle" : "character_sheet" } },
      "IF" : [
        { "data_is" : { "data" : [ "node:field-is-storyteller" ], "value" : 1 } }
      ],
      "DO" : [
        { "data_set" : {
            "data" : [ "node:author:field-storyhost-character" ],
            "value" : [ "node" ]
          }
        },
        { "entity_save" : { "data" : [ "node:author" ] } },
        { "data_set" : { "data" : [ "node:field-realm" ], "value" : "storyhost" } },
        { "data_set" : { "data" : [ "node:field-titles" ], "value" : "ASH" } },
        { "workflow_rules_set_state" : {
            "node" : [ "node" ],
            "workflow_state" : { "value" : { "4" : "4" } },
            "workflow_comment" : "Storyhost characters are auto approved"
          }
        }
      ]
    }
  }');
  return $items;
}

<?php
/**
 * @file
 * Code for the Vaxia Players feature.
 */

include_once 'vaxia_players.features.inc';

/**
 * Implements hook_permission().
 */
function vaxia_players_permission() {
  return array(
    'email others characters'=> array(
      'title' => t('email others characters'),
      'description' => t('Email others characters.'),
    ),
  );
}

/**
 * Implements hook_user_view().
 */
function vaxia_players_user_view($account, $view_mode, $langcode) {
  if ($view_mode == 'full') {
    global $user;

    // If an active player in good standing OR permissioned user allow to email.
    if (($user->uid == $account->uid) || user_access('email others characters')) {
      $this_form = drupal_get_form('_vaxia_players_email_characters', $account);
      $account->content['vaxia_players_email'] = array(
        '#markup' => '<div class="vaxia_players_email">' . drupal_render($this_form) . '</div>',
        '#weight' => 1000,
      );
    }

    // Disable the fields from viewing if you're not the owner or permissioned.
    if (!($user->uid == $node->uid || user_access('edit SH notes'))) {
      $display = variable_get('vaxia_public_user_fields', '');
      $display = explode("\n", $display);
      foreach ($display as $index => $value) {
        $display[$index] = trim($value);
      }
      foreach ($node->content as $index => $value) {
        if (strpos($index, '#') === FALSE && !in_array($index, $display)) {
          unset($node->content[$index]);
        }
      }
    }

  }
}

/**
 * Implelents node_form_alter for nodes.
 * Character sheet, field level controls for players and moderators according to character sheet defs.
 */
function vaxia_players_form_user_profile_form_alter(&$form, &$form_state, $form_id) {
  global $user;
  $node = $form['#node'];
  $lang = $form['language']['#value'];
  // If this is the owner of the account disallow access to specific fields.
  if ($user->uid == $node->uid) {
    $hidden = variable_get('vaxia_disabled_user_fields', '');
    $hidden = explode("\n", $allowed);
    foreach ($hidden as $index => $value) {
      $field_name = trim($value);
      $form[$field_name]['#access'] = FALSE;
      $form[$field_name][$lang][0]['#access'] = FALSE;
      if (isset($form[$field_name][$lang][0]['#default_value'])) {
        $form[$field_name][$lang][0]['#value'] = $form[$field_name][$lang][0]['#default_value'];
      }
      if (isset($form[$field_name][$lang]['add_more'])) {
        $form[$field_name][$lang]['add_more']['#access'] = FALSE;
      }
    }
  }
}

/**
 * Implements hook_mail.
 */
function vaxia_players_mail($key, &$message, $params) {
  $message['subject'] = $params['subject'];
  $message['body'][] = $params['body'];
}

/**
 * Form to allow characters for a player to be emailed easily.
 */
function _vaxia_players_email_characters($form, &$form_state, $account) {
  // Include help file.
  module_load_include('inc', 'vaxia', 'vaxia.helper');
  // Make form.
  if (!function_exists('_vaxia_player_characters')) {
    return $form;
  }
  $characters = _vaxia_player_characters($account);
  $pcs = array();
  foreach ($characters as $character) {
    $pcs[ $character->nid ] = $character->title;
  }
  if (empty($pcs)) {
    return $form;
  }
  $form['vaxia_players_email'] = array(
    '#type' => 'fieldset',
    '#title' => 'Email Characters',
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );
  // Still here? Ok - make the button.
  $form['vaxia_players_email']['help'] = array(
    '#markup' => '<div class="vaxia_players_email">' .
      t('Clicking this button will send an email summary of the following characters ' .
        'to the email associated with this account: %pcs' .
       '</div>',
      array('%pcs' => implode(', ', $pcs))),
  );
  $form['vaxia_players_email']['player_uid'] = array(
    '#type' => 'hidden',
    '#value' => $account->uid,
  );
  $submit = t('Send Me My Characters');
  global $user;
  if ($user->uid != $account->uid) {
    $submit = t('Send @name Their Characters', array('@name' => $account->name));
  }
  $form['vaxia_players_email']['send'] = array(
    '#type' => 'submit',
    '#value' => $submit,
  );
  return $form;
}

/**
 * Submit handler.
 */
function _vaxia_players_email_characters_submit($form, &$form_state) {
  // Include help file.
  module_load_include('inc', 'vaxia', 'vaxia.helper');
  // Make form.
  if (!function_exists('_vaxia_player_characters')) {
    drupal_set_message(t('Unable to send email - vaxia helper not available.'));
    return;
  }
  $account = user_load($form_state['values']['player_uid']);
  if (empty($account->mail)) {
    drupal_set_message(t('Unable to send email - no email found for this account.'));
    return;
  }
  if (!valid_email_address($account->mail)) {
    drupal_set_message(t('Unable to send email - invalid email found for this account.'));
    return;
  }
  // And execute the email.
  $characters = _vaxia_player_characters($account);
  $message = '';
  foreach ($characters as $character) {
    // See: https://api.drupal.org/api/drupal/modules!book!book.module/function/book_node_export/7
    // Wanting to get a text friendly format for this.
    $message[] = $character->title;
    $build = node_view($character, 'full', user_preferred_language($account));
    $message[] = drupal_html_to_text( drupal_render($build) );
    $message[] = "\n";
  }
  $message = implode("\n", $message);
  $subject = t('[Vaxia] Player Characters for @name', array('@name' => $account->name));
  // Send it.
  $message = drupal_mail(
    'vaxia_players',
    'email_pcs',
    'bastlynn@gmail.com',//$account->mail,
    user_preferred_language($account),
    array(
      'body' => $message,
      'subject' => $subject,
    )
  );
}